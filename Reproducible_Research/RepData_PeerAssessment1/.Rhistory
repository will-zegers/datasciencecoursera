labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
)
ggplot(intervalStats, aes(strftime(intervalStats$Interval,format='%H:%M'),Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_Format('%H:'%M'))
```
<br/>
Looks like there's a clear spike at sometime between 500 and 1000. We'll use
the *max* function to identify when exactly this occurs:
```{r}
intervalStats[which.max(intervalStats$Avg.Steps),'Interval']
```
***
## Imputing missing values
</br>
How many rows of *actionData* are missing values (i.e., contain an 'NA')?
```{r}
sum(is.na(actionData$steps))
```
To fill these missing spaces, we'll generate random numbers based on the mean
and standard deviation of steps for the interval in which the NA exists. (This
is admittedly sort of overkill and was a personal choice, just to try something
slightly more challenging.)
<br/>
First thing will be to add an extra column to *intervalStats* that will contain
the standard deviation for that interval:
```{r}
intervalStats$Std.Dev <- aggregate(steps~interval,actionData,sd)$steps
head(intervalStats)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_Format('%H:'%M'))
```
<br/>
Looks like there's a clear spike at sometime between 500 and 1000. We'll use
the *max* function to identify when exactly this occurs:
```{r}
intervalStats[which.max(intervalStats$Avg.Steps),'Interval']
```
***
## Imputing missing values
</br>
How many rows of *actionData* are missing values (i.e., contain an 'NA')?
```{r}
sum(is.na(actionData$steps))
```
To fill these missing spaces, we'll generate random numbers based on the mean
and standard deviation of steps for the interval in which the NA exists. (This
is admittedly sort of overkill and was a personal choice, just to try something
slightly more challenging.)
<br/>
First thing will be to add an extra column to *intervalStats* that will contain
the standard deviation for that interval:
```{r}
intervalStats$Std.Dev <- aggregate(steps~interval,actionData,sd)$steps
head(intervalStats)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_Format('%H:'%M'))
```
<br/>
Looks like there's a clear spike at sometime between 500 and 1000. We'll use
the *max* function to identify when exactly this occurs:
```{r}
intervalStats[which.max(intervalStats$Avg.Steps),'Interval']
```
***
## Imputing missing values
</br>
How many rows of *actionData* are missing values (i.e., contain an 'NA')?
```{r}
sum(is.na(actionData$steps))
```
To fill these missing spaces, we'll generate random numbers based on the mean
and standard deviation of steps for the interval in which the NA exists. (This
is admittedly sort of overkill and was a personal choice, just to try something
slightly more challenging.)
<br/>
First thing will be to add an extra column to *intervalStats* that will contain
the standard deviation for that interval:
```{r}
intervalStats$Std.Dev <- aggregate(steps~interval,actionData,sd)$steps
head(intervalStats)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
)# +
#  scale_x_date(labels=date_Format('%H:'%M'))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_format('%H:%M'))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_format("%H:%M""))
```
<br/>
Looks like there's a clear spike at sometime between 500 and 1000. We'll use
)
)""
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_format("%H:%M"))
?scale_x_date
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels = date_format("%H:%M"))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(format="%H:%M")
library(scales)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_format("%H:%M"))
intervalStats$Interval <- as.Date(intervalStats$Interval)
library(scales)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_date(labels=date_format("%H:%M"))
t <- Sys.time()
type(t)
class(t)
?POSIXct
t.min()
min(t)
sec(t)
str(T)
str(t)
?date_format
?time_format
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(labels=strftime(intervalStats$Interval("%H:%M"))
)
intervalStats <- aggregate(steps ~ interval, actionData, mean)
colnames(intervalStats) <- c('Interval', 'Avg.Steps')
intervalStats$Interval <- strptime(intervalStats$Interval,format='%H%M')
head(intervalStats)
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(labels=format(intervalStats$Interval,"%H:%M"))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(breaks=('6 hours'),labels=format(intervalStats$Interval,"%H:%M"))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(breaks=('6 hours'))
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime()
?scale_x_datetime
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(format="%H:%M")
ggplot(intervalStats, aes(Interval,Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(labels=date_format("%H:%M"))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(newIntervalStats, aes(interval,steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Interval (time of day)',
y    ='Average number steps',
title='Average number of steps by time of day'
)
scale_x_datetime(labels=date_format('%H:%M'))
ggplot(newIntervalStats, aes(interval,steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Interval (time of day)',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'))
intervalStats[which.max(intervalStats$Avg.Steps),'Interval']
intervalStats <- aggregate(steps ~ interval, actionData, mean)
colnames(intervalStats) <- c('Interval', 'Avg.Steps')
library(scales)
ggplot(intervalStats, aes(strptime(intervalStats$Interval,format='%H%M'),Avg.Steps)) +
geom_line() +
theme_bw() +
labs(
x    ='Interval (time of day)',
y    ='Average number of steps',
title='Average daily activity patterns'
) +
scale_x_datetime(labels=date_format("%H:%M"))
ggplot(newIntervalStats, aes(strptime(newIntervalStats$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Interval (time of day)',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'))
newIntervalStats <- aggregate(steps~interval*Day.Type,actionData,mean)
head(newIntervalStats)
ggplot(newIntervalStats, aes(strptime(newIntervalStats$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Interval (time of day)',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'))
source('~/.active-rstudio-document', echo=TRUE)
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'),minor_breaks=('3 hours'))
source('~/.active-rstudio-document', echo=TRUE)
?scale_x_datetime
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'),minor_breaks=date_breaks('3 hours'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'),minor_breaks=date_breaks("3 hour"))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks=date_breaks("3 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(minor_breaks=date_breaks("3 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(minor_breaks=date_breaks("2 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks=date_breaks("6 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks=date_breaks("4 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks=date_breaks("2 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks=date_breaks("4 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(minor_breaks=date_breaks("2 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks = c(0,6,12,18,24),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks = date_format("6 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks = date_breaks("6 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks = date_breaks("2 hour") + date_breaks("6 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(breaks = date_breaks("6 hour"),minor_breaks = date_breaks("3 hour"),labels=date_format('%H:%M'))
ggplot(Interval.Stats.New, aes(strptime(Interval.Stats.New$interval,format='%H%M'),steps)) +
facet_grid(Day.Type~.) +
geom_line() +
theme_linedraw() +
labs(
x    ='Time of day',
y    ='Average number steps',
title='Average number of steps by time of day'
) +
scale_x_datetime(labels=date_format('%H:%M'))
